name: "Docker / Paper"

on:
  push:
    branches: [main]
    tags: ["v*"]

jobs:
  docker_image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: mamba-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            mamba-${{ runner.os }}-buildx-
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ github.repository }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  paper:
    runs-on: ubuntu-20.04
    needs: docker_image
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v2
        with:
          path: |
            cache/Tectonic/*
            !cache/Tectonic/formats
          key: tectonic-cache-${{ github.sha }}
          restore-keys: |
            tectonic-cache-

      # Generate the figures
      - name: Figures
        uses: docker://ghcr.io/dfm/one-datum:main
        with:
          entrypoint: paper/figures/make-figures.sh

      # Compile the PDF
      - uses: docker://ghcr.io/dfm/tectonic-image:main
        with:
          args: paper/one-datum.tex
        env:
          XDG_CACHE_HOME: /github/workspace/cache

      # Upload the PDF and figures as an artifact. This is useful for PRs where the results
      # don't get pushed to a branch
      - uses: actions/upload-artifact@v2
        with:
          name: paper
          path: |
            paper/one-datum.pdf
            paper/figures/githash.tex
            paper/figures/*.pdf
            paper/figures/*.ipynb

      - uses: dfm/force-push-branch-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          branch-suffix: "-pdf"
          path: paper

#       # If this isn't a pull request, force push the PDF to an orphan branch
#       - name: Push compiled PDF
#         if: ${{ github.event_name != 'pull_request' }}
#         continue-on-error: true
#         run: |
#           git checkout --orphan ${GITHUB_REF##*/}-pdf
#           git rm --cached -rf .
#           git add -f LICENSE
#           git add -f paper/one-datum.pdf
#           git add -f paper/figures/githash.tex
#           git add -f paper/figures/*.pdf
#           git add -f paper/figures/*.ipynb
#           git -c user.name='gh-actions' -c user.email='gh-actions' commit -m "updating pdf"
#           git push --force https://github.com/$GITHUB_REPOSITORY ${GITHUB_REF##*/}-pdf
